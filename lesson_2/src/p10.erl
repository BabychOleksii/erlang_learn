%====================================================
% ===================== Task ========================
%====================================================
%% P10 (**) Закодировать список с использованием алгоритма RLE:
% Пример:
% 1> p10:encode([a,a,a,a,b,c,c,a,a,d,e,e,e,e]).
% [{4,a},{1,b},{2,c},{2,a},{1,d},{4,e}]

%========================================================
% ===================== Solution ========================
%========================================================
-module(p10).
-export([encode/1]).

encode(List) ->
  encode(List, 1, []).

encode([Head, Head | Tail], Iter, Acc) ->
  encode([Head | Tail], Iter+1, Acc);
encode([Head | Tail], Iter, Acc) ->
  encode(Tail, 1, [{Iter, Head} | Acc]);
encode([], _, Acc) ->
  p05:reverse(Acc).

% Первое решение (без хвостовой рекурсии)
% encode(L) ->
%   encode(L, 1).

% encode([H,H|T], I) ->
%   encode([H|T], I+1);
% encode([H|T], I) ->
%   [{I, H} |encode(T, 1)];
% encode([], _) ->
%   [].

%====================================================
% ===================== Test ========================
%====================================================
-ifdef(TEST).
-include_lib("eunit/include/eunit.hrl").

encode_test() ->
  [
    ?_assert(encode([a,a,a,a,b,c,c,a,a,d,e,e,e,e]) =:= [{4,a},{1,b},{2,c},{2,a},{1,d},{4,e}])
    ].

-endif.